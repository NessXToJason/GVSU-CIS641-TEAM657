{"version":3,"sources":["Components/button.js","Screens/Home.js","Screens/SaveScreen.js","Screens/ColorPicker.js","App.js","Components/pixelArt.jpg","Components/background.jpg"],"names":["Cell","props","initalColor","newColor","useState","selectedColor","setSelectedColor","View","styles","cells","Button","color","onPress","StyleSheet","create","height","width","aspectRatio","container","margin","flex","flexDirection","alignItems","justifyContent","home","route","navigation","setNewColor","drawColor","dataSource","setDataSource","useEffect","params","console","log","items","Array","apply","col","map","v","i","id","src","Image","source","require","style","resizeMode","ImageBackground","image","SafeAreaView","FlatList","data","renderItem","item","numColumns","keyExtractor","index","title","navigate","save","setOptions","headerRight","TouchableOpacity","Text","Feather","marginRight","name","size","headerLeft","backgroundColor","colorpicker","alignSelf","setInitColor","defaultColor","oldColor","Pass","back","to","screen","here","onOldColorSelected","onColorSelected","App","Stack","createStackNavigator","NavigationContainer","Navigator","Screen","component","module","exports"],"mappings":"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","file":"static/js/app.b242fda4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, View, StyleSheet } from 'react-native';\r\n\r\n\r\nexport default function Cell(props) {\r\n    const { initalColor, newColor } = props;\r\n    const [selectedColor, setSelectedColor, ]= useState(initalColor);\r\n    const cellPress= ()=> {\r\n        setSelectedColor(newColor);\r\n   }\r\nreturn(\r\n<View  styles= {styles.cells}>\r\n     <Button\r\n        color={ selectedColor }\r\n        onPress= {cellPress}    \r\n    >\r\n    \r\n    </Button>\r\n    </View>\r\n     \r\n);\r\n\r\n}const styles = StyleSheet.create({\r\n\r\n    cells: {\r\n      height: 1000,\r\n      width: 1000,\r\n      aspectRatio: 1 \r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  ImageBackground,\r\n  Button,\r\n  SafeAreaView,\r\n  FlatList,\r\n  Image\r\n} from 'react-native';\r\n\r\nimport Cell from '../Components/button';\r\n\r\nconst home = ({ route, navigation }) => {\r\n  const [newColor, setNewColor] = useState('#cc8899');\r\n  var drawColor = '#ffffff';\r\n  const [dataSource, setDataSource] = useState([]);\r\n  var col = 30;\r\n\r\n  /* color passing start */\r\n  useEffect(() => {\r\n    if (route.params?.newColor) { setNewColor(route.params.newColor); }\r\n    else if (route.params?.color) {\r\n      setNewColor(route.params.color);\r\n      console.log(`${newColor}`)\r\n    }\r\n\r\n   let items = Array.apply(null, Array(col * col)).map((v, i) => {\r\n      return {\r\n        id: {}, src: <Cell initalColor={drawColor} newColor={newColor} />\r\n\r\n      };\r\n    });\r\n    setDataSource(items);\r\n\r\n  }, [route.params?.newColor, route.params?.color]);\r\n  \r\n  return (\r\n    \r\n    \r\n    <View>\r\n      \r\n      <Image source={require('../Components/pixelArt.jpg')} \r\n        style= {{width: \"30%\", height: \"30%\" }}\r\n        resizeMode=\"contain\"\r\n        ImageBackground= \"#000000\"/>\r\n        \r\n      <ImageBackground \r\n        source={require('../Components/background.jpg')}\r\n        //image source: https://cdn.pixabay.com/photo/2013/12/05/20/38/concrete-223838_1280.jpg\r\n          style={styles.image}>\r\n     \r\n    \r\n      <SafeAreaView style={styles.container}>\r\n      \r\n\r\n        <FlatList\r\n          data={dataSource}\r\n          renderItem={({ item }) => (\r\n            <View  style={styles.cells}\r\n              onPress={() =>drawColor = '#cc8899'}>\r\n              <Cell initalColor={drawColor} newColor={newColor} />\r\n            </View>\r\n\r\n          )}\r\n          //Setting the number of column\r\n          numColumns={col}\r\n          keyExtractor={(item, index) => index}\r\n        />\r\n        <Button\r\n        title=\"Color Picker\"\r\n        color={ newColor }\r\n        onPress={() => {\r\n          navigation.navigate('colorpicker', { newColor })\r\n        }}/>\r\n      </SafeAreaView>\r\n       \r\n      </ImageBackground>\r\n    </View>\r\n   \r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n  container: {\r\n    margin: 20,\r\n    flex: 1,\r\n    flexDirection: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n\r\n  },\r\n  cells: {\r\n    aspectRatio: 1,\r\n    flexDirection: \"column\", \r\n    justifyContent: \"center\", \r\n   },\r\n \r\n});\r\n\r\nexport default home;","import React, { useState, useEffect } from \"react\";\r\n\r\n\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  Button,\r\n  TouchableOpacity\r\n} from 'react-native';\r\n\r\nimport { Feather } from '@expo/vector-icons';\r\n\r\n\r\nconst save = ({ route, navigation }) => {\r\n  navigation.setOptions({\r\n    headerRight: () => (\r\n      <TouchableOpacity\r\n        onPress={() =>\r\n          navigation.navigate('Home')}>\r\n        <Text> Home </Text>\r\n\r\n        <Feather style={{ marginRight: 10 }} name='home' size={24} />\r\n      </TouchableOpacity>\r\n    ), headerLeft: () => (\r\n      <TouchableOpacity\r\n        onPress={() =>\r\n          navigation.navigate('Save')}>\r\n        <Text> Save </Text>\r\n\r\n        <Feather style={{ marginRight: 10 }} name='save' size={24} />\r\n      </TouchableOpacity>\r\n    ),\r\n  });\r\n  return (\r\n    <View>\r\n      <Text>Save Screen</Text>\r\n    </View>\r\n  )\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\nexport default save;\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    View,\r\n    Text,\r\n    Button,\r\n    TouchableOpacity\r\n} from 'react-native';\r\n\r\nimport { Feather } from '@expo/vector-icons';\r\nimport { ColorPicker, TriangleColorPicker, toHsv, fromHsv } from 'react-native-color-picker';\r\n//import { Slider } from '@react-native-community/slider';\r\n\r\nconst colorpicker = ({ route, navigation }) => {\r\n    /* color passing start */\r\n    const [initColor, setInitColor] = useState('');\r\n    const [newColor, setNewColor] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (route.params?.newColor) {\r\n            setInitColor(route.params.newColor);\r\n            setNewColor(route.params.newColor);\r\n        }\r\n        // NOTE: These are handled by color picker or default back button now\r\n        // navigation.setOptions({\r\n        //     headerRight: () => (\r\n        //         <TouchableOpacity\r\n        //             onPress={() =>\r\n        //                 navigation.navigate('Home')}>\r\n        //             <Text> Cancel </Text>\r\n\r\n        //             <Feather style={{ marginRight: 10 }} name='home' size={24} />\r\n        //         </TouchableOpacity>\r\n        //     // ), headerLeft: () => (\r\n        //     //     <TouchableOpacity\r\n        //     //         onPress={() =>\r\n        //     //             navigation.navigate('Home', { newColor })}>\r\n        //     //         <Text> Save </Text>\r\n\r\n        //     //         <Feather style={{ marginRight: 10 }} name='save' size={24} />\r\n        //     //     </TouchableOpacity>\r\n        //     // ),\r\n        // });\r\n    }, [route.params?.newColor]);\r\n\r\n    /* color passing end */\r\n\r\n    return (\r\n        <View>\r\n            <TriangleColorPicker\r\n                style={styles.colorpicker}\r\n                defaultColor={\"#ffffff\"}\r\n                // FIXME: Currently not working with initColor\r\n                oldColor={newColor}\r\n                Pass back to home screen here\r\n                onOldColorSelected={\r\n                    //color => setNewColor(color),\r\n                    //color => alert(`Color selected: ${color}, new color: ${newColor}`),\r\n                    color => navigation.navigate('Home', { color })\r\n                }\r\n                onColorSelected={\r\n                    //color => setNewColor(color),\r\n                    //color => alert(`Color selected: ${color}, new color: ${newColor}`),\r\n                    color => navigation.navigate('Home', { color })\r\n                }\r\n            />\r\n        </View>\r\n    )\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 2,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n    },\r\n    colorpicker: {\r\n        width: 350,\r\n        height: 600,\r\n        alignSelf: 'center'\r\n    }\r\n});\r\n\r\nexport default colorpicker;","import { StyleSheet, Text, View } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport home from './Screens/Home';\r\nimport save from './Screens/SaveScreen';\r\nimport colorpicker from './Screens/ColorPicker';\r\nexport default function App() {\r\n\r\n  const Stack = createStackNavigator();\r\n  \r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen name=\"Home\" component={home} />\r\n        <Stack.Screen name=\"SaveScreen\" component={save} />\r\n        <Stack.Screen name=\"colorpicker\" component={colorpicker} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});","module.exports = __webpack_public_path__ + \"static/media/pixelArt.662e38a3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background.814445f7.jpg\";"],"sourceRoot":""}